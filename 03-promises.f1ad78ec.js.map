{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAGAD,EAAAE,OAAOC,KAAK,CAAEC,SAAS,IAEvB,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,UAkC/B,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACT,MAAMC,EAAgBC,KAAKC,SAAW,GAChCC,EAAa,C,SAAET,E,MAAUC,GAC3BK,EACFH,EAAQM,GAERL,EAAOK,EAAW,GAEnBR,EAAM,G,CAvCbN,EAAKC,KAAKc,iBAAiB,SAE3B,SAAuBC,GAGrB,GAFAA,EAAEC,iBAEoB,WAAlBD,EAAEE,OAAOC,KAAmB,CAC9BH,EAAEE,OAAOE,gBAAgB,YACzB,IAAIC,EAAQC,OAAOtB,EAAKC,KAAKK,MAAMiB,OACnC,MAAMC,EAAOF,OAAOtB,EAAKC,KAAKuB,KAAKD,OAC7BE,EAASH,OAAOtB,EAAKC,KAAKwB,OAAOF,OAGvC,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAChCtB,EAAcsB,EAAGL,GACdM,MAAK,EAACtB,SAAEA,EAAQC,MAAEA,MACjBX,EAAAE,OAAO+B,QAAQ,uBAAqBvB,QAAiBC,MAAU,IAEhEuB,OAAM,EAACxB,SAAEA,EAAQC,MAAEA,MAClBX,EAAAE,OAAOiC,QAAQ,sBAAoBzB,QAAeC,MAAU,IAEhEe,GAASG,EAGXd,YAAW,KACTM,EAAEE,OAAOE,gBAAgB,WAAW,GACnCC,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport 'notiflix/dist/notiflix-3.2.5.min.css';\n\nNotify.init({ useIcon: false });\n\nconst refs = {\n  form: document.querySelector('.form'),\n};\n\nlet timerId = null;\n\nrefs.form.addEventListener('click', onClickSubmit);\n\nfunction onClickSubmit(e) {\n  e.preventDefault();\n\n  if (e.target.type === 'submit') {\n    e.target.toggleAttribute('disabled');\n    let delay = Number(refs.form.delay.value);\n    const step = Number(refs.form.step.value);\n    const amount = Number(refs.form.amount.value);\n\n    //==================================================\n    for (let i = 1; i <= amount; i += 1) {\n      createPromise(i, delay)\n        .then(({ position, delay }) => {\n          Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n      delay += step;\n    }\n    //================================================== toggle submit button\n    setTimeout(() => {\n      e.target.toggleAttribute('disabled');\n    }, delay);\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      const newOptions = { position, delay };\n      if (shouldResolve) {\n        resolve(newOptions);\n      } else {\n        reject(newOptions);\n      }\n    }, delay);\n  });\n}\n"],"names":["$iQIUW","parcelRequire","Notify","init","useIcon","$47d4ff9957288465$var$refs","form","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","shouldResolve","Math","random","newOptions","addEventListener","e","preventDefault","target","type","toggleAttribute","delay1","Number","value","step","amount","i","then","success","catch","failure"],"version":3,"file":"03-promises.f1ad78ec.js.map"}