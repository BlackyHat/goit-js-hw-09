{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAGAD,EAAAE,OAAOC,KAAK,CAAEC,SAAS,IAEvB,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,UAG/B,IAAIC,EAAU,KAEdJ,EAAKC,KAAKI,iBAAiB,SAE3B,SAAuBC,GAErB,GADAA,EAAEC,iBACoB,WAAlBD,EAAEE,OAAOC,KAAmB,CAC9BH,EAAEE,OAAOE,gBAAgB,YACzB,MAAMC,EAAQX,EAAKC,KAAKW,MAAMC,MACxBC,EAAOd,EAAKC,KAAKa,KAAKD,MACtBE,EAASf,EAAKC,KAAKc,OAAOF,MAChC,IAAIG,EAAQ,EAGZC,YAAW,KACTb,EAAUc,aAAY,KAwB5B,IAAuBC,EAAUP,EAvBzBI,GAAS,EACII,OAAOL,KAAYK,OAAOJ,KAGrCK,cAAcjB,GACdE,EAAEE,OAAOE,gBAAgB,cAkBZS,EAfDH,EAeWJ,EAfJE,EAgBX,IAAIQ,SAAQ,CAACC,EAASC,KACpC,MAAMC,EAAgBC,KAAKC,SAAW,GAEhCC,EAAa,C,SACjBT,E,MACAP,GAEEa,EAEFF,EAAQK,GAIRJ,EAAOI,EAAW,KA5BbC,MAAK,EAACV,SAAEA,EAAQP,MAAEA,MACjBjB,EAAAE,OAAOiC,QAAQ,uBAAqBX,QAAiBP,MAAU,IAEhEmB,OAAM,EAACZ,SAAEA,EAAQP,MAAEA,MAClBjB,EAAAE,OAAOmC,QAAQ,sBAAoBb,QAAeP,MAAU,GAC5D,GAEHE,EAAK,GACPH,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport 'notiflix/dist/notiflix-3.2.5.min.css';\n\nNotify.init({ useIcon: false });\n\nconst refs = {\n  form: document.querySelector('.form'),\n};\n\nlet timerId = null;\n\nrefs.form.addEventListener('click', onClickSubmit);\n\nfunction onClickSubmit(e) {\n  e.preventDefault();\n  if (e.target.type === 'submit') {\n    e.target.toggleAttribute('disabled');\n    const delay = refs.form.delay.value;\n    const step = refs.form.step.value;\n    const amount = refs.form.amount.value;\n    let count = 0;\n\n    //==================================================\n    setTimeout(() => {\n      timerId = setInterval(() => {\n        count += 1;\n        let isTrue = Number(amount) === Number(count);\n\n        if (isTrue) {\n          clearInterval(timerId);\n          e.target.toggleAttribute('disabled');\n        }\n        //==================================================\n        createPromise(count, step)\n          .then(({ position, delay }) => {\n            Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n          })\n          .catch(({ position, delay }) => {\n            Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n          });\n        //==================================================\n      }, step);\n    }, delay);\n\n    //==================================================\n  }\n}\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    // Asynchronous operation\n    const newOptions = {\n      position,\n      delay,\n    };\n    if (shouldResolve) {\n      // Fulfill\n      resolve(newOptions);\n    }\n    // Reject\n    else {\n      reject(newOptions);\n    }\n  });\n\n  return promise;\n}\n"],"names":["$iQIUW","parcelRequire","Notify","init","useIcon","$47d4ff9957288465$var$refs","form","document","querySelector","$47d4ff9957288465$var$timerId","addEventListener","e","preventDefault","target","type","toggleAttribute","delay1","delay","value","step","amount","count","setTimeout","setInterval","position","Number","clearInterval","Promise","resolve","reject","shouldResolve","Math","random","newOptions","then","success","catch","failure"],"version":3,"file":"03-promises.d5485db4.js.map"}